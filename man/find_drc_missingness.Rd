% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_drc_missingness.R
\name{find_drc_missingness}
\alias{find_drc_missingness}
\title{Find missing not at random cases in dose-response type data}
\usage{
find_drc_missingness(
  data,
  sample,
  grouping,
  response,
  dose,
  min_cluster_size = 3,
  fisher_pval_cutoff,
  complete_doses = NULL,
  max_dose_replicates = NULL,
  for_plot = FALSE
)
}
\arguments{
\item{data}{a data frame containing at least the input columns.}

\item{sample}{a character column in the \code{data} data frame that contains the sample name.}

\item{grouping}{a character column in the \code{data} data frame that contains e.g. protein, precursor or
peptide identifiers. Can also be any other identifiers as long as there is one potential dose-response
curve per entity in this column.}

\item{response}{a numeric column in the \code{data} data frame that contains e.g. intensity values that
make up the response of the dose-response curve.}

\item{dose}{a numeric column in the \code{data} data frame that contains dose information. This does not
need to be a concentration but can also simply be the dose order.}

\item{min_cluster_size}{a numeric value that specifies the minimal size of either of the two clusters
the dose-response curve was split into. Default is 3.}

\item{fisher_pval_cutoff}{a numeric value that specifies the cutoff for the p-value obtained from
the fisher's exact test. Everything with a p-value below or equal to this threshold will be
considered to pass.}

\item{complete_doses}{optional but recommended, a numeric vector that contains all theoretically
observable doses for the given data. The doses need to be in ascending order. This argument is
important for datasets that are small and might therefore not contain all the actual doses.}

\item{max_dose_replicates}{optional but recommended (required if \code{complete_doses} was provided),
a numeric vector that contains the maximum number of observations for each dose point. Needs
to be in the same order as \code{complete_doses}.}

\item{for_plot}{a logical value that determines the output of the function. Default is FALSE.}
}
\value{
A data frame that contains the fisher's exact test p-value as well as information on
the dataset split. The classification of MNAR cases is done based on the specified p-value
cutoff. If \code{for_plot} is \code{TRUE} a data frame with information required for a plot of each case
is returned.
}
\description{
Dose-response data can suffer from loss of detection due to the detection limit
of the device used to record the data. On mass spectrometers there will always
be precursor ions detected at the lower end of the intensity normal distribution.
If one of these precursors responds to a dose treatment with a decrease in intensity,
it might fall below the limit of detection and therefore no more observations are
made in the upper or lower end of the treatment concentrations. While it is not possible
to fit a sigmoidal dose-response curve and to extract useful parameters in these cases,
it is at least possible to classify them as responders. For that we are looking for
dose-related consecutive not at random missingness (MNAR) of observations.
}
\details{
We first cluster the data in two groups with the most unequal number of observations possible.
For that we optimize for the minimal summed squared error of two clusters for each possible dataset
split along the dose axis. On this split we perform a fisher's exact test, for the enrichment of
detected and undetected samples. The obtained p-value leaves us with a good ranking of possible
missing not at random cases.
}
\examples{

# Load libraries
library(dplyr)
library(ggplot2)

# Set seed
set.seed(123) # Makes example reproducible

# Create example data
data_test <- create_synthetic_data(
  n_proteins = 2,
  frac_change = 1,
  n_replicates = 3,
  n_conditions = 8,
  method = "dose_response",
  concentrations = c(0, 1, 10, 50, 100, 500, 1000, 5000),
  additional_metadata = FALSE
) \%>\% 
  # remove random sample to simulate uneven sample numbers
  filter(!sample \%in\% c("sample_4", "sample_19")) 

# Run MNAR classification
MNAR_classification <- data_test \%>\% 
  find_drc_missingness(
    sample = sample,
    grouping = peptide,
    response = peptide_intensity_missing,
    dose = concentration,
    # set p-value cutoff low for highest confidence cases
    fisher_pval_cutoff = 0.0001, 
    complete_doses = c(0, 1, 10, 50, 100, 500, 1000, 5000),
    # some concentrations have less replicates due to removed samples
    max_dose_replicates = c(3, 2, 3, 3, 3, 3, 2, 3) 
  ) 

MNAR_cases <- MNAR_classification \%>\% 
  filter(MNAR) \%>\% 
  pull(peptide)

# Export cases for plotting
MNAR_for_plot <- data_test \%>\% 
  find_drc_missingness(
    sample = sample,
    grouping = peptide,
    response = peptide_intensity_missing,
    dose = concentration,
    fisher_pval_cutoff = 0.0001,
    complete_doses = c(0, 1, 10, 50, 100, 500, 1000, 5000),
    # some concentrations have less replicates due to removed samples
    max_dose_replicates = c(3, 2, 3, 3, 3, 3, 2, 3),
    for_plot = TRUE
  ) \%>\% 
  filter(peptide \%in\% MNAR_cases)

# Plot MNAR cases
ggplot(MNAR_for_plot \%>\% arrange(desc(type))) +
  geom_col(aes(dose_order, count, fill = type), position = "identity") +
  geom_line(MNAR_for_plot \%>\% distinct(peptide, cluster_split_id, score_total_error), mapping = aes(cluster_split_id, score_total_error / 10), linewidth = 1.5, alpha = 0.8, col = protti::protti_colours[1]) +
  facet_wrap(~ peptide) + 
  scale_fill_manual(values = c(protti::protti_colours[2], "grey"))+
  scale_y_continuous(sec.axis = sec_axis(~ .*10, name = "Score")) +
  labs(x = "Concentration Order", y = "Count", fill = "Count Type") + 
  theme_bw() +
  theme(plot.title = ggplot2::element_text(size = 18),
        axis.text.x = ggplot2::element_text(size = 10),
        axis.text.y = ggplot2::element_text(size = 10, color = protti::protti_colours[2]),
        axis.text.y.right = element_text(color = protti::protti_colours[1]),
        axis.title.y.right = element_text(color= protti::protti_colours[1]),
        axis.title.y = ggplot2::element_text(size = 12, color = protti::protti_colours[2]),
        axis.title.x = ggplot2::element_text(size = 12),
        legend.title = ggplot2::element_text(size = 12),
        legend.text = ggplot2::element_text(size = 12),
        strip.text.x = ggplot2::element_text(size = 10),
        strip.background = element_blank())
        
}
